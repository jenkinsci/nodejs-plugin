#
# The MIT License
#
# Copyright (c) 2016, Nikolas Falco
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

NodeJSInstaller.DescriptorImpl.displayName=Install from nodejs.org
NodeJSInstaller.FailedToInstallNodeJS=Failed to install NodeJS. Exit code={0}
NodeJSInstaller.installFromCache=Installing NodeJS from {0} to {1} on {2}
NodeJSInstaller.failedToUnpack=Failed to unpack {0} ({1} bytes read)
NodeJSInstallation.displayName=NodeJS
NodeJSBuildWrapper.displayName=Provide Node & npm bin/ folder to PATH
NodeJSCommandInterpreter.displayName=Execute NodeJS script
NodeJSCommandInterpreter.commandFailed=command execution failed
NodeJSBuilders.noExecutableFound=Couldn\u2019t find any executable in "{0}"
NodeJSBuilders.noInstallationFound=No installation {0} found. Please define one in manager Jenkins.
NodeJSBuilders.nodeOffline=Cannot get installation for node, since it is not online
NPMConfig.displayName=Npm config file
NPMConfig.verifyTooGlobalRegistry=Too many registries configured as global (no scope assigned), at most one is allowed.
NPMConfig.default=- use system default -
NPMRegistry.DescriptorImpl.emptyCredentialsId=Credentials is required
NPMRegistry.DescriptorImpl.invalidCredentialsId=Current credentials does not exists
NPMRegistry.DescriptorImpl.emptyRegistryURL=Registry URL is required
NPMRegistry.DescriptorImpl.invalidRegistryURL=Invalid URL, should start with https://
NPMRegistry.DescriptorImpl.emptyScopes=Scopes is required
NPMRegistry.DescriptorImpl.invalidScopes=Invalid scope
NPMRegistry.DescriptorImpl.invalidCharInScopes=Remove the '@' character from scope
CPU.unknown=Unknown CPU architecture: {0}
Platform.unknown=Unknown OS name: {0}
SystemTools.nodeNotAvailable=Node could be offline or there are no executor defined for Node {0}
SystemTools.failureOnProperties=Error getting system properties on remote Node
SystemTools.unsupported32bitArchitecture=NodeJS does not have a 32bit package available for the current node
JobCacheLocationLocator.displayName=Local to the workspace
ExecutorCacheLocationLocator.displayName=Local to the executor
DefaultCacheLocationLocator.displayName=Default (~/.npm or %APP_DATA%\\npm-cache)
InstallerPathResolver.unsupportedOS=Unresolvable nodeJS installer for version={0}, platform={1}
InstallerPathResolver.unsupportedArch=Unresolvable nodeJS installer for version={0}, cpu={1}, platform={2}
MirrorNodeJSInstaller.invalidCredentialsId=Credentials {0} does not exists
MirrorNodeJSInstaller.DescriptorImpl.displayName=Install from nodejs.org mirror
MirrorNodeJSInstaller.DescriptorImpl.emptyMirrorURL=The Mirror URL field cannot be empty.
MirrorNodeJSInstaller.DescriptorImpl.invalidURL=Malformed URL